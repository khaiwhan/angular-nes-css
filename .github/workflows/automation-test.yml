name: Automation Test

on:
  pull_request:
    branches: [ main ]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Docker
      run: |
        for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
        # Add Docker's official GPG key:
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
         
        DOCKER_COMPOSE_VERSION=2.21.0
        sudo curl -L "https://github.com/docker/compose/releases/download/v${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build and Run Web Application
      run: |
        echo "Building Docker image for web application..."
        docker build -t angular-nes-css ./dockerizer
        echo "Running Docker container for web application..."
        docker run --rm -d -p 80:80 --name angular-nes-css angular-nes-css

    - name: Run Api test
      working-directory: ./tests/api-test
      run: |
        echo "Running API Test script..."
        docker-compose run --rm -e API_URL=${{ secrets.API_URL }} newman

      continue-on-error: false

    - name: Tear down
      if: always()
      working-directory: ./tests/api-test
      run: |
        docker-compose down

    - name: Run Web test
      working-directory: ./tests/ui-test
      run: |
        echo "Running Web Test script..."
        docker-compose run --rm -e WEB_URL=http://localhost cypress

      continue-on-error: false

    - name: Tear down
      if: always()
      working-directory: ./tests/ui-test
      run: |
        docker-compose down

    - name: Run Load test
      working-directory: ./tests/load-test
      run: |
        echo "Running Load Test script..."
        docker-compose run --rm -e API_URL=${{ secrets.API_URL }} k6 

      continue-on-error: false

    - name: Tear down
      if: always()
      working-directory: ./tests/load-test
      run: |
        docker-compose down

    - name: Stop virtual web
      run: |
        docker stop angular-nes-css